# Makefile pour Windows - Projet ProxmoxDash

.PHONY: help build test test-backend test-frontend test-integration clean install

# Variables
BACKEND_DIR = backend
FRONTEND_DIR = frontend
TESTS_DIR = tests

help: ## Affiche cette aide
	@echo ProxmoxDash - Commandes disponibles:
	@echo.
	@grep -E "^[a-zA-Z_-]+:.*?## .*$$" $(MAKEFILE_LIST) | sort | awk "BEGIN {FS = \":.*?## \"}; {printf \"  %-20s %s\n\", $$1, $$2}"

install: ## Installe les dépendances
	@echo Installation des dépendances...
	@cd $(BACKEND_DIR) && go mod tidy
	@cd $(FRONTEND_DIR) && npm install

build: ## Build le projet
	@echo Build du projet...
	@cd $(BACKEND_DIR) && go build -o main.exe cmd/main.go
	@cd $(FRONTEND_DIR) && npm run build

test: test-backend test-frontend ## Lance tous les tests
	@echo Tous les tests sont terminés

test-backend: ## Lance les tests du backend
	@echo Tests du backend...
	@cd $(BACKEND_DIR) && go test -v ./...

test-frontend: ## Lance les tests du frontend
	@echo Tests du frontend...
	@cd $(FRONTEND_DIR) && npm run test:run

test-coverage: ## Lance les tests avec couverture
	@echo Tests avec couverture...
	@cd $(BACKEND_DIR) && go test -cover ./...
	@cd $(FRONTEND_DIR) && npm run test:coverage

test-watch: ## Lance les tests en mode watch
	@echo Tests en mode watch...
	@cd $(FRONTEND_DIR) && npm test

test-ui: ## Lance l'interface de test
	@echo Interface de test...
	@cd $(FRONTEND_DIR) && npm run test:ui

clean: ## Nettoie les fichiers de build
	@echo Nettoyage...
	@cd $(BACKEND_DIR) && go clean
	@cd $(FRONTEND_DIR) && if exist dist rmdir /s /q dist
	@cd $(FRONTEND_DIR) && if exist node_modules\.vite rmdir /s /q node_modules\.vite
	@if exist $(TESTS_DIR)\coverage rmdir /s /q $(TESTS_DIR)\coverage

dev: ## Lance le mode développement
	@echo Mode développement...
	@echo Backend: http://localhost:8080
	@echo Frontend: http://localhost:5173
	@echo Utilisez Ctrl+C pour arrêter

lint: ## Lance le linting
	@echo Linting...
	@cd $(BACKEND_DIR) && go vet ./...
	@cd $(FRONTEND_DIR) && npm run lint

format: ## Formate le code
	@echo Formatage du code...
	@cd $(BACKEND_DIR) && go fmt ./...
	@cd $(FRONTEND_DIR) && npm run lint -- --fix
